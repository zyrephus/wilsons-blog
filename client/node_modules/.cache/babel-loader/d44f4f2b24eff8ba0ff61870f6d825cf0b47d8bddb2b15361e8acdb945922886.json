{"ast":null,"code":"var _jsxFileName = \"/Users/wilson/Documents/GitHub/wilsons-blog/src/pages/login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport '../App.css';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState(''); // State for username\n  const [password, setPassword] = useState(''); // State for password\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    console.log(username, password);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loginBox\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\" // Enables flexbox\n        ,\n        flexDirection: \"column\" // Stack children vertically\n        ,\n        alignItems: \"center\",\n        sx: {\n          '& > :not(style)': {\n            m: 1,\n            width: '300px'\n          },\n          '& label.MuiInputLabel-root': {\n            color: 'white' // Color of the label when unfocused\n          },\n          '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n              borderColor: 'white',\n              // Color of the border\n              borderWidth: '1px'\n            },\n            '&:hover fieldset': {\n              borderColor: 'orange' // Color of the border on hover\n            },\n            '&.Mui-focused fieldset': {\n              borderColor: '#B16CFF' // Color of the border when the TextField is focused\n            },\n            '& input': {\n              color: 'white' // Color of the input text\n            }\n          }\n        },\n        component: \"form\",\n        noValidate: true,\n        autoComplete: \"off\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"loginHeader\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-username\",\n          label: \"Username\",\n          onChange: event => setUsername(event.target.value),\n          value: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-password\",\n          label: \"Password\",\n          type: \"password\",\n          onChange: event => setPassword(event.target.value),\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          direction: \"row\",\n          display: \"flex\" // Enables flexbox\n          ,\n          justifyContent: \"center\",\n          sx: {\n            '& > :not(style)': {\n              m: 1,\n              width: '300px'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            sx: {\n              backgroundColor: 'orange',\n              // Background color for the normal state\n              color: 'white',\n              // Text color\n              '&:hover': {\n                backgroundColor: '#B16CFF' // Background color on hover\n              }\n            },\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Login, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Box","TextField","Stack","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","username","setUsername","password","setPassword","handleSubmit","event","preventDefault","console","log","children","id","display","flexDirection","alignItems","sx","m","width","color","borderColor","borderWidth","component","noValidate","autoComplete","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","label","onChange","target","value","type","spacing","direction","justifyContent","variant","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/wilson/Documents/GitHub/wilsons-blog/src/pages/login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport '../App.css';\n\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\n \nconst Login = () => {\n    const [username, setUsername] = useState(''); // State for username\n    const [password, setPassword] = useState(''); // State for password\n\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n        console.log(username,password)\n    }\n    \n    return (\n        <>\n            <div id=\"loginBox\">\n                <Box\n                    display=\"flex\" // Enables flexbox\n                    flexDirection=\"column\" // Stack children vertically\n                    alignItems=\"center\"\n                    sx={{\n                        '& > :not(style)': { m: 1, width: '300px' },\n                        '& label.MuiInputLabel-root': {\n                            color: 'white', // Color of the label when unfocused\n                        },\n                        '& .MuiOutlinedInput-root': {\n                            '& fieldset': {\n                                borderColor: 'white', // Color of the border\n                                borderWidth: '1px',\n                            },\n                            '&:hover fieldset': {\n                                borderColor: 'orange', // Color of the border on hover\n                            },\n                            '&.Mui-focused fieldset': {\n                                borderColor: '#B16CFF', // Color of the border when the TextField is focused\n                            },\n                            '& input': {\n                                color: 'white', // Color of the input text\n                            },\n                        },\n                    }}\n                    component=\"form\"\n                    noValidate\n                    autoComplete=\"off\"\n                    onSubmit={handleSubmit}\n                >\n                    <h2 id=\"loginHeader\">Login</h2>\n                    <TextField\n                        id=\"outlined-username\"\n                        label=\"Username\"\n                        onChange={(event) => setUsername(event.target.value)}\n                        value={username}\n                    />\n                    <TextField\n                        id=\"outlined-password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        onChange={(event) => setPassword(event.target.value)}\n                        value={password}\n                    />\n                    <Stack\n                        spacing={2}\n                        direction=\"row\"\n                        display=\"flex\" // Enables flexbox\n                        justifyContent=\"center\"\n                        sx={{\n                            '& > :not(style)': { m: 1, width: '300px' },\n                        }}\n                    >\n                        <Button \n                            variant=\"contained\"\n                            sx={{\n                                backgroundColor: 'orange', // Background color for the normal state\n                                color: 'white', // Text color\n                                '&:hover': {\n                                    backgroundColor: '#B16CFF', // Background color on hover\n                                },\n                            }}\n                        >\n                            Login\n                        </Button>\n                    </Stack>\n                </Box>\n            </div>\n        </>\n    );\n}\n \nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}